Terminals which are not used

   TOK_ERROR


Grammar

    0 $accept: lines $end

    1 lines: /* empty */
    2      | lines line

    3 line: line_ending
    4     | command arguments line_ending

    5 command: TOK_IDENTIFIER

    6 line_ending: TOK_EOL
    7            | TOK_EOF

    8 arguments: boolean_expression
    9          | word_list

   10 word_list: /* empty */
   11          | word_list TOK_WORD

   12 boolean_expression: '!' boolean_expression
   13                   | boolean_expression TOK_AND boolean_expression
   14                   | boolean_expression TOK_OR boolean_expression
   15                   | boolean_expression TOK_EQ boolean_expression
   16                   | boolean_expression TOK_NE boolean_expression
   17                   | '(' boolean_expression ')'
   18                   | string_value '<' string_value
   19                   | string_value '>' string_value
   20                   | string_value TOK_EQ string_value
   21                   | string_value TOK_NE string_value
   22                   | string_value TOK_LE string_value
   23                   | string_value TOK_GE string_value

   24 string_value: TOK_IDENTIFIER
   25             | TOK_STRING
   26             | function_call

   27 function_call: function_name '(' function_arguments_or_empty ')'

   28 function_name: TOK_IDENTIFIER

   29 function_arguments_or_empty: /* empty */
   30                            | function_arguments

   31 function_arguments: string_value
   32                   | function_arguments ',' string_value


Terminals, with rules where they appear

$end (0) 0
'!' (33) 12
'(' (40) 17 27
')' (41) 17 27
',' (44) 32
'<' (60) 18
'>' (62) 19
error (256)
TOK_AND (258) 13
TOK_OR (259) 14
TOK_EQ (260) 15 20
TOK_NE (261) 16 21
TOK_GE (262) 23
TOK_LE (263) 22
TOK_EOF (264) 7
TOK_EOL (265) 6
TOK_ERROR (266)
TOK_STRING (267) 25
TOK_IDENTIFIER (268) 5 24 28
TOK_WORD (269) 11


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
lines (22)
    on left: 1 2, on right: 0 2
line (23)
    on left: 3 4, on right: 2
command (24)
    on left: 5, on right: 4
line_ending (25)
    on left: 6 7, on right: 3 4
arguments (26)
    on left: 8 9, on right: 4
word_list (27)
    on left: 10 11, on right: 9 11
boolean_expression (28)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23, on right: 8 12 13
    14 15 16 17
string_value (29)
    on left: 24 25 26, on right: 18 19 20 21 22 23 31 32
function_call (30)
    on left: 27, on right: 26
function_name (31)
    on left: 28, on right: 27
function_arguments_or_empty (32)
    on left: 29 30, on right: 27
function_arguments (33)
    on left: 31 32, on right: 30 32


state 0

    0 $accept: . lines $end

    $default  reduce using rule 1 (lines)

    lines  go to state 1


state 1

    0 $accept: lines . $end
    2 lines: lines . line

    $end            shift, and go to state 2
    TOK_EOF         shift, and go to state 3
    TOK_EOL         shift, and go to state 4
    TOK_IDENTIFIER  shift, and go to state 5

    line         go to state 6
    command      go to state 7
    line_ending  go to state 8


state 2

    0 $accept: lines $end .

    $default  accept


state 3

    7 line_ending: TOK_EOF .

    $default  reduce using rule 7 (line_ending)


state 4

    6 line_ending: TOK_EOL .

    $default  reduce using rule 6 (line_ending)


state 5

    5 command: TOK_IDENTIFIER .

    $default  reduce using rule 5 (command)


state 6

    2 lines: lines line .

    $default  reduce using rule 2 (lines)


state 7

    4 line: command . arguments line_ending

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    '!'             shift, and go to state 11
    '('             shift, and go to state 12

    $default  reduce using rule 10 (word_list)

    arguments           go to state 13
    word_list           go to state 14
    boolean_expression  go to state 15
    string_value        go to state 16
    function_call       go to state 17
    function_name       go to state 18


state 8

    3 line: line_ending .

    $default  reduce using rule 3 (line)


state 9

   25 string_value: TOK_STRING .

    $default  reduce using rule 25 (string_value)


state 10

   24 string_value: TOK_IDENTIFIER .
   28 function_name: TOK_IDENTIFIER .

    '('       reduce using rule 28 (function_name)
    $default  reduce using rule 24 (string_value)


state 11

   12 boolean_expression: '!' . boolean_expression

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    '!'             shift, and go to state 11
    '('             shift, and go to state 12

    boolean_expression  go to state 19
    string_value        go to state 16
    function_call       go to state 17
    function_name       go to state 18


state 12

   17 boolean_expression: '(' . boolean_expression ')'

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    '!'             shift, and go to state 11
    '('             shift, and go to state 12

    boolean_expression  go to state 20
    string_value        go to state 16
    function_call       go to state 17
    function_name       go to state 18


state 13

    4 line: command arguments . line_ending

    TOK_EOF  shift, and go to state 3
    TOK_EOL  shift, and go to state 4

    line_ending  go to state 21


state 14

    9 arguments: word_list .
   11 word_list: word_list . TOK_WORD

    TOK_WORD  shift, and go to state 22

    $default  reduce using rule 9 (arguments)


state 15

    8 arguments: boolean_expression .
   13 boolean_expression: boolean_expression . TOK_AND boolean_expression
   14                   | boolean_expression . TOK_OR boolean_expression
   15                   | boolean_expression . TOK_EQ boolean_expression
   16                   | boolean_expression . TOK_NE boolean_expression

    TOK_AND  shift, and go to state 23
    TOK_OR   shift, and go to state 24
    TOK_EQ   shift, and go to state 25
    TOK_NE   shift, and go to state 26

    $default  reduce using rule 8 (arguments)


state 16

   18 boolean_expression: string_value . '<' string_value
   19                   | string_value . '>' string_value
   20                   | string_value . TOK_EQ string_value
   21                   | string_value . TOK_NE string_value
   22                   | string_value . TOK_LE string_value
   23                   | string_value . TOK_GE string_value

    TOK_EQ  shift, and go to state 27
    TOK_NE  shift, and go to state 28
    TOK_GE  shift, and go to state 29
    TOK_LE  shift, and go to state 30
    '<'     shift, and go to state 31
    '>'     shift, and go to state 32


state 17

   26 string_value: function_call .

    $default  reduce using rule 26 (string_value)


state 18

   27 function_call: function_name . '(' function_arguments_or_empty ')'

    '('  shift, and go to state 33


state 19

   12 boolean_expression: '!' boolean_expression .
   13                   | boolean_expression . TOK_AND boolean_expression
   14                   | boolean_expression . TOK_OR boolean_expression
   15                   | boolean_expression . TOK_EQ boolean_expression
   16                   | boolean_expression . TOK_NE boolean_expression

    $default  reduce using rule 12 (boolean_expression)


state 20

   13 boolean_expression: boolean_expression . TOK_AND boolean_expression
   14                   | boolean_expression . TOK_OR boolean_expression
   15                   | boolean_expression . TOK_EQ boolean_expression
   16                   | boolean_expression . TOK_NE boolean_expression
   17                   | '(' boolean_expression . ')'

    TOK_AND  shift, and go to state 23
    TOK_OR   shift, and go to state 24
    TOK_EQ   shift, and go to state 25
    TOK_NE   shift, and go to state 26
    ')'      shift, and go to state 34


state 21

    4 line: command arguments line_ending .

    $default  reduce using rule 4 (line)


state 22

   11 word_list: word_list TOK_WORD .

    $default  reduce using rule 11 (word_list)


state 23

   13 boolean_expression: boolean_expression TOK_AND . boolean_expression

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    '!'             shift, and go to state 11
    '('             shift, and go to state 12

    boolean_expression  go to state 35
    string_value        go to state 16
    function_call       go to state 17
    function_name       go to state 18


state 24

   14 boolean_expression: boolean_expression TOK_OR . boolean_expression

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    '!'             shift, and go to state 11
    '('             shift, and go to state 12

    boolean_expression  go to state 36
    string_value        go to state 16
    function_call       go to state 17
    function_name       go to state 18


state 25

   15 boolean_expression: boolean_expression TOK_EQ . boolean_expression

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    '!'             shift, and go to state 11
    '('             shift, and go to state 12

    boolean_expression  go to state 37
    string_value        go to state 16
    function_call       go to state 17
    function_name       go to state 18


state 26

   16 boolean_expression: boolean_expression TOK_NE . boolean_expression

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    '!'             shift, and go to state 11
    '('             shift, and go to state 12

    boolean_expression  go to state 38
    string_value        go to state 16
    function_call       go to state 17
    function_name       go to state 18


state 27

   20 boolean_expression: string_value TOK_EQ . string_value

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10

    string_value   go to state 39
    function_call  go to state 17
    function_name  go to state 18


state 28

   21 boolean_expression: string_value TOK_NE . string_value

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10

    string_value   go to state 40
    function_call  go to state 17
    function_name  go to state 18


state 29

   23 boolean_expression: string_value TOK_GE . string_value

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10

    string_value   go to state 41
    function_call  go to state 17
    function_name  go to state 18


state 30

   22 boolean_expression: string_value TOK_LE . string_value

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10

    string_value   go to state 42
    function_call  go to state 17
    function_name  go to state 18


state 31

   18 boolean_expression: string_value '<' . string_value

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10

    string_value   go to state 43
    function_call  go to state 17
    function_name  go to state 18


state 32

   19 boolean_expression: string_value '>' . string_value

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10

    string_value   go to state 44
    function_call  go to state 17
    function_name  go to state 18


state 33

   27 function_call: function_name '(' . function_arguments_or_empty ')'

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 29 (function_arguments_or_empty)

    string_value                 go to state 45
    function_call                go to state 17
    function_name                go to state 18
    function_arguments_or_empty  go to state 46
    function_arguments           go to state 47


state 34

   17 boolean_expression: '(' boolean_expression ')' .

    $default  reduce using rule 17 (boolean_expression)


state 35

   13 boolean_expression: boolean_expression . TOK_AND boolean_expression
   13                   | boolean_expression TOK_AND boolean_expression .
   14                   | boolean_expression . TOK_OR boolean_expression
   15                   | boolean_expression . TOK_EQ boolean_expression
   16                   | boolean_expression . TOK_NE boolean_expression

    TOK_EQ  shift, and go to state 25
    TOK_NE  shift, and go to state 26

    $default  reduce using rule 13 (boolean_expression)


state 36

   13 boolean_expression: boolean_expression . TOK_AND boolean_expression
   14                   | boolean_expression . TOK_OR boolean_expression
   14                   | boolean_expression TOK_OR boolean_expression .
   15                   | boolean_expression . TOK_EQ boolean_expression
   16                   | boolean_expression . TOK_NE boolean_expression

    TOK_AND  shift, and go to state 23
    TOK_EQ   shift, and go to state 25
    TOK_NE   shift, and go to state 26

    $default  reduce using rule 14 (boolean_expression)


state 37

   13 boolean_expression: boolean_expression . TOK_AND boolean_expression
   14                   | boolean_expression . TOK_OR boolean_expression
   15                   | boolean_expression . TOK_EQ boolean_expression
   15                   | boolean_expression TOK_EQ boolean_expression .
   16                   | boolean_expression . TOK_NE boolean_expression

    $default  reduce using rule 15 (boolean_expression)


state 38

   13 boolean_expression: boolean_expression . TOK_AND boolean_expression
   14                   | boolean_expression . TOK_OR boolean_expression
   15                   | boolean_expression . TOK_EQ boolean_expression
   16                   | boolean_expression . TOK_NE boolean_expression
   16                   | boolean_expression TOK_NE boolean_expression .

    $default  reduce using rule 16 (boolean_expression)


state 39

   20 boolean_expression: string_value TOK_EQ string_value .

    $default  reduce using rule 20 (boolean_expression)


state 40

   21 boolean_expression: string_value TOK_NE string_value .

    $default  reduce using rule 21 (boolean_expression)


state 41

   23 boolean_expression: string_value TOK_GE string_value .

    $default  reduce using rule 23 (boolean_expression)


state 42

   22 boolean_expression: string_value TOK_LE string_value .

    $default  reduce using rule 22 (boolean_expression)


state 43

   18 boolean_expression: string_value '<' string_value .

    $default  reduce using rule 18 (boolean_expression)


state 44

   19 boolean_expression: string_value '>' string_value .

    $default  reduce using rule 19 (boolean_expression)


state 45

   31 function_arguments: string_value .

    $default  reduce using rule 31 (function_arguments)


state 46

   27 function_call: function_name '(' function_arguments_or_empty . ')'

    ')'  shift, and go to state 48


state 47

   30 function_arguments_or_empty: function_arguments .
   32 function_arguments: function_arguments . ',' string_value

    ','  shift, and go to state 49

    $default  reduce using rule 30 (function_arguments_or_empty)


state 48

   27 function_call: function_name '(' function_arguments_or_empty ')' .

    $default  reduce using rule 27 (function_call)


state 49

   32 function_arguments: function_arguments ',' . string_value

    TOK_STRING      shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10

    string_value   go to state 50
    function_call  go to state 17
    function_name  go to state 18


state 50

   32 function_arguments: function_arguments ',' string_value .

    $default  reduce using rule 32 (function_arguments)
