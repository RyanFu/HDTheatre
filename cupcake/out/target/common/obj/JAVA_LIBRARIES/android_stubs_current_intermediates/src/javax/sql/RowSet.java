package javax.sql;
public interface RowSet
  extends java.sql.ResultSet
{
public abstract  void addRowSetListener(javax.sql.RowSetListener theListener);
public abstract  void clearParameters() throws java.sql.SQLException;
public abstract  void execute() throws java.sql.SQLException;
public abstract  java.lang.String getCommand();
public abstract  java.lang.String getDataSourceName();
public abstract  boolean getEscapeProcessing() throws java.sql.SQLException;
public abstract  int getMaxFieldSize() throws java.sql.SQLException;
public abstract  int getMaxRows() throws java.sql.SQLException;
public abstract  java.lang.String getPassword();
public abstract  int getQueryTimeout() throws java.sql.SQLException;
public abstract  int getTransactionIsolation();
public abstract  java.util.Map<java.lang.String, java.lang.Class<?>> getTypeMap() throws java.sql.SQLException;
public abstract  java.lang.String getUrl() throws java.sql.SQLException;
public abstract  java.lang.String getUsername();
public abstract  boolean isReadOnly();
public abstract  void removeRowSetListener(javax.sql.RowSetListener theListener);
public abstract  void setArray(int parameterIndex, java.sql.Array theArray) throws java.sql.SQLException;
public abstract  void setAsciiStream(int parameterIndex, java.io.InputStream theInputStream, int length) throws java.sql.SQLException;
public abstract  void setBigDecimal(int parameterIndex, java.math.BigDecimal theBigDecimal) throws java.sql.SQLException;
public abstract  void setBinaryStream(int parameterIndex, java.io.InputStream theInputStream, int length) throws java.sql.SQLException;
public abstract  void setBlob(int parameterIndex, java.sql.Blob theBlob) throws java.sql.SQLException;
public abstract  void setBoolean(int parameterIndex, boolean theBoolean) throws java.sql.SQLException;
public abstract  void setByte(int parameterIndex, byte theByte) throws java.sql.SQLException;
public abstract  void setBytes(int parameterIndex, byte[] theByteArray) throws java.sql.SQLException;
public abstract  void setCharacterStream(int parameterIndex, java.io.Reader theReader, int length) throws java.sql.SQLException;
public abstract  void setClob(int parameterIndex, java.sql.Clob theClob) throws java.sql.SQLException;
public abstract  void setCommand(java.lang.String cmd) throws java.sql.SQLException;
public abstract  void setConcurrency(int concurrency) throws java.sql.SQLException;
public abstract  void setDataSourceName(java.lang.String name) throws java.sql.SQLException;
public abstract  void setDate(int parameterIndex, java.sql.Date theDate) throws java.sql.SQLException;
public abstract  void setDate(int parameterIndex, java.sql.Date theDate, java.util.Calendar theCalendar) throws java.sql.SQLException;
public abstract  void setDouble(int parameterIndex, double theDouble) throws java.sql.SQLException;
public abstract  void setEscapeProcessing(boolean enable) throws java.sql.SQLException;
public abstract  void setFloat(int parameterIndex, float theFloat) throws java.sql.SQLException;
public abstract  void setInt(int parameterIndex, int theInteger) throws java.sql.SQLException;
public abstract  void setLong(int parameterIndex, long theLong) throws java.sql.SQLException;
public abstract  void setMaxFieldSize(int max) throws java.sql.SQLException;
public abstract  void setMaxRows(int max) throws java.sql.SQLException;
public abstract  void setNull(int parameterIndex, int sqlType) throws java.sql.SQLException;
public abstract  void setNull(int parameterIndex, int sqlType, java.lang.String typeName) throws java.sql.SQLException;
public abstract  void setObject(int parameterIndex, java.lang.Object theObject) throws java.sql.SQLException;
public abstract  void setObject(int parameterIndex, java.lang.Object theObject, int targetSqlType) throws java.sql.SQLException;
public abstract  void setObject(int parameterIndex, java.lang.Object theObject, int targetSqlType, int scale) throws java.sql.SQLException;
public abstract  void setPassword(java.lang.String password) throws java.sql.SQLException;
public abstract  void setQueryTimeout(int seconds) throws java.sql.SQLException;
public abstract  void setReadOnly(boolean readOnly) throws java.sql.SQLException;
public abstract  void setRef(int parameterIndex, java.sql.Ref theRef) throws java.sql.SQLException;
public abstract  void setShort(int parameterIndex, short theShort) throws java.sql.SQLException;
public abstract  void setString(int parameterIndex, java.lang.String theString) throws java.sql.SQLException;
public abstract  void setTime(int parameterIndex, java.sql.Time theTime) throws java.sql.SQLException;
public abstract  void setTime(int parameterIndex, java.sql.Time theTime, java.util.Calendar theCalendar) throws java.sql.SQLException;
public abstract  void setTimestamp(int parameterIndex, java.sql.Timestamp theTimestamp) throws java.sql.SQLException;
public abstract  void setTimestamp(int parameterIndex, java.sql.Timestamp theTimestamp, java.util.Calendar theCalendar) throws java.sql.SQLException;
public abstract  void setTransactionIsolation(int level) throws java.sql.SQLException;
public abstract  void setType(int type) throws java.sql.SQLException;
public abstract  void setTypeMap(java.util.Map<java.lang.String, java.lang.Class<?>> theTypeMap) throws java.sql.SQLException;
public abstract  void setUrl(java.lang.String theURL) throws java.sql.SQLException;
public abstract  void setUsername(java.lang.String theUsername) throws java.sql.SQLException;
}
